---
# Ubuntu 24.04
- name: Librenms Install
  hosts: librenms
  roles:
    - sysupgrade
  # example_vars:
  #   tz: "America/Los_Angeles" # Any timezone for use in php or system config
  #   librenms_password: Aloha1234! # Admin user password
  #   librenms_email: "admin@example.com" # Admin user email
  #   librenms_domain: "librenms.example.com" # domain exluding protocol for defining APP_URL
  #   librenms_domain_proto: "http" # Either 'http' or 'https'
  #   database_password: Aloha1234! # database password for user 'librenms'
  #   snmpd_community: HELLOWORLD # snmpd community string
  #   snmpd_contact: "Admin admin@example.com" # snmpd contact
  #   snmpd_loc: "Neverland" # snmpd location
  #   snmpd_group: testgroup # snmpd group
  tasks:
    - name: Install Packages
      ansible.builtin.apt:
        update_cache: true
        autoclean: true
        name: "{{ lookup('file', 'files/librenms/packages.txt').splitlines() }}"

    - name: Add Librenms User
      ansible.builtin.user:
        name: librenms
        home: /opt/librenms
        create_home: false
        system: true
        shell: "/usr/bin/bash"

    - name: Add www-data to Group librenms
      ansible.builtin.user:
        name: "www-data"
        groups: "librenms"
        append: true

    - name: Update system timezone
      community.general.timezone:
        name: "{{ tz }}"

    - name: Trust Cloned Directory
      community.general.git_config:
        name: safe.directory
        value: /opt/librenms
        scope: global

    - name: Clone Git
      ansible.builtin.git:
        repo: "https://github.com/librenms/librenms.git"
        dest: "/opt/librenms"
      register: repo_clone
      failed_when:
        - repo_clone.failed
        - 'not "Local modifications exist" in repo_clone.msg'

    - name: Update Owner
      ansible.builtin.file:
        path: "/opt/librenms"
        owner: librenms
        group: librenms
        recurse: true
        mode: "0771"

    - name: Update ACL
      ansible.posix.acl:
        path: "{{ item }}"
        etype: "group"
        permissions: "rwx"
        default: true
        recursive: true
        state: present
      loop:
        - /opt/librenms/rrd
        - /opt/librenms/logs
        - /opt/librenms/storage
        - /opt/librenms/bootstrap/cache

    - name: Install Dependencies as User
      ansible.builtin.shell: ./scripts/composer_wrapper.php install --no-dev && echo $(date) > .install_deps
      args:
        chdir: /opt/librenms
        creates: /opt/librenms/.install_deps
      become: true
      become_user: librenms

    - name: Update php Timezone
      ansible.builtin.replace:
        path: "{{ item }}"
        after: "\\[Date\\]"
        before: "\\[filter\\]"
        regexp: "^;date.timezone.*$"
        replace: "date.timezone = {{ tz }}"
      loop: # TODO: dont hard code
        - /etc/php/8.3/fpm/php.ini
        - /etc/php/8.3/cli/php.ini

    - name: Update Database Config
      ansible.builtin.copy:
        src: librenms/db.conf
        dest: /etc/mysql/mariadb.conf.d/50-server.cnf
        force: true
        mode: "0664"
      register: db_conf
      notify:
        - Restart Database

    - name: Create table
      community.mysql.mysql_db:
        login_user: root
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: librenms
        collation: utf8mb4_unicode_ci
        encoding: utf8mb4

    - name: Create db User
      community.mysql.mysql_user:
        login_user: root
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: librenms
        password: "{{ database_password }}"
        column_case_sensitive: true
        priv: "librenms.*:ALL"

    - name: Copy preseed config
      ansible.builtin.template:
        src: files/librenms/preseed.yaml.j2
        dest: /opt/librenms/database/seeders/config/preeseed.yaml
        mode: "0664"

    - name: Test env
      ansible.builtin.command: cat /opt/librenms/.env
      register: env_conf
      check_mode: false # Always run

    - name: Copy env
      ansible.builtin.template:
        src: files/librenms/env.j2
        dest: /opt/librenms/.env
        force: true
        mode: "0664"
      when: "env_conf.rc != 0 or '__COMMENT' not in env_conf.stdout"

    - name: Copy php-fpm Config
      ansible.builtin.copy:
        src: librenms/php-librenms.conf
        dest: /etc/php/8.3/fpm/pool.d/librenms.conf
        force: true
        mode: "0664"
      notify:
        - Restart php-fpm

    - name: Copy Nginx Config
      ansible.builtin.template:
        src: files/librenms/nginx-librenms.conf.j2
        dest: /etc/nginx/conf.d/librenms.conf
        mode: "0664"
      notify:
        - Restart Nginx

    - name: Copy rrdcached Config
      ansible.builtin.template:
        src: files/librenms/rrdcache.conf.j2
        dest: /etc/default/rrdcached
        mode: "0664"
      register: rrdcached_conf
      notify:
        - Restart rrdcached

    - name: Fix rrdcached Permissions
      ansible.builtin.file:
        path: "/var/lib/rrdcached/journal/"
        owner: librenms
        group: librenms

    - name: Remove Extra Webserver Config
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/nginx/sites-enabled/default
        - /etc/nginx/sites-available/default
        - /etc/php/8.3/fpm/pool.d/www.conf

    - name: Install lnms Command
      ansible.builtin.file:
        dest: /usr/bin/lnms
        src: /opt/librenms/lnms
        mode: "0755"
        state: link

    - name: Install lnms Command Completion
      ansible.builtin.copy:
        dest: /etc/bash_completion.d/
        src: /opt/librenms/misc/lnms-completion.bash
        remote_src: true
        mode: "0664"

    - name: Install snmpd conf
      ansible.builtin.template:
        dest: /etc/snmp/snmpd.conf
        src: files/snmpd/snmpd.conf.j2
        mode: "0664"
      notify:
        - Restart snmpd

    - name: Install snmpd distro command
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/librenms/librenms-agent/master/snmp/distro
        dest: /usr/bin/distro
        mode: "0755"
      notify:
        - Restart snmpd

    - name: Copy cronjobs
      ansible.builtin.copy:
        src: /opt/librenms/dist/librenms.cron
        dest: /etc/cron.d/librenms
        remote_src: true
        mode: "0664"

    - name: Copy Scheduler
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /etc/systemd/system/
        remote_src: true
        mode: "0664"
      loop:
        - /opt/librenms/dist/librenms-scheduler.service
        - /opt/librenms/dist/librenms-scheduler.timer
      register: scheduler_service

    - name: Start Scheduler
      ansible.builtin.service:
        name: librenms-scheduler.timer
        state: "started"
        enabled: true

    - name: Copy logrotate
      ansible.builtin.copy:
        src: /opt/librenms/misc/librenms.logrotate
        dest: /etc/logrotate.d/librenms
        remote_src: true
        mode: "0664"

    - name: Complete install
      become: true
      become_user: librenms
      block:
        - name: Generate App Key
          ansible.builtin.shell:
            cmd: "/opt/librenms/lnms key:generate --no-interaction --force && echo $(date) > /opt/librenms/.refreshed_key"
            chdir: /opt/librenms/
            creates: "/opt/librenms/.refreshed_key"
            executable: /bin/bash

        - name: Generate VAPID keys
          ansible.builtin.shell:
            cmd: "/opt/librenms/lnms webpush:vapid --no-interaction --force && echo $(date) > /opt/librenms/.refreshed_vapid"
            chdir: /opt/librenms/
            creates: "/opt/librenms/.refreshed_vapid"
            executable: /bin/bash

        - name: Apply Database Migrations
          ansible.builtin.shell:
            cmd: "/opt/librenms/lnms migrate --no-interaction --force && echo $(date) > /opt/librenms/.migrated_db"
            chdir: /opt/librenms/
            creates: "/opt/librenms/.migrated_db"
            executable: /bin/bash

        - name: Seed Database
          ansible.builtin.shell:
            cmd: "/opt/librenms/lnms db:seed --no-interaction --force && echo $(date) > /opt/librenms/.seeded_db"
            chdir: /opt/librenms/
            creates: "/opt/librenms/.seeded_db"
            executable: /bin/bash

        # Passes password via command line, this seems insecure
        - name: Add Admin User
          ansible.builtin.shell:
            cmd:
              "/opt/librenms/lnms user:add admin --no-interaction --role=admin --email={{ librenms_email | quote }} --password={{ librenms_password | quote }}
              && echo $(date) > /opt/librenms/.created_admin"
            # stdin: "{{ librenms_password }}"
            chdir: /opt/librenms/
            creates: "/opt/librenms/.created_admin"
            executable: /bin/bash

        - name: Add localhost device
          ansible.builtin.shell:
            cmd: "/opt/librenms/lnms device:add --no-interaction --force --v2c --community={{ snmpd_community | quote }} localhost && echo $(date) > /opt/librenms/.added_localhost"
            chdir: /opt/librenms/
            creates: "/opt/librenms/.added_localhost"
            executable: /bin/bash

        - name: Cache Config
          ansible.builtin.shell:
            cmd: "/opt/librenms/lnms config:cache --no-interaction"
            chdir: /opt/librenms/
            executable: /bin/bash
  handlers:
    - name: Restart Database
      ansible.builtin.service:
        name: mariadb
        state: restarted
        enabled: true

    - name: Restart Nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
        enabled: true

    - name: Restart php-fpm
      ansible.builtin.service:
        name: php8.3-fpm
        state: restarted
        enabled: true

    - name: Restart rrdcached
      ansible.builtin.service:
        name: rrdcached
        enabled: true
        state: restarted

    - name: Restart snmpd
      ansible.builtin.service:
        name: snmpd
        state: "restarted"
        enabled: true
